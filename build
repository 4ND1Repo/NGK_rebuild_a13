#!/bin/sh

# Setting global variable
VBMETA_DIGEST="34f9b716-0e2b-438c-a8dc-b05bcc048fe9" # get from : cat /proc/sys/kernel/random/boot_id
CONFIG_LOCALVERSION="-.::NGKxUN::4.5.0::." # original : "-NoGravityKernel-v4.5.0"
BUILD_USER="G14nd1"
BUILD_HOST="CachyOS"
KSU="y"
KSUNEXT="y"
SUSFS="y"


# checking requirement
if ! command -v docker &> /dev/null; then echo "Please install docker first";  exit 1; fi
if [ "$(docker images -f reference=ubuntu:build-20 | grep ubuntu | cut -d" " -f1)" != "ubuntu" ]; then
    docker build --rm -f Dockerfile -t ubuntu:build-20 .
fi


if [ ! -d "$(pwd)/orig" ]; then
  git clone https://github.com/Pierre2324/NGK_android_kernel_xiaomi_sdm845.git --depth=1 -b t-caf-latest orig
else
  cd orig && git pull --rebase --autostash --no-verify && cd ..
fi


# fresh repository data
rm -rf ngk && mkdir ngk && cp -rf orig/* ngk/

# patching with condition for KSU or KSU-Next
if [[ "$KSU" =~ [yY] && "$KSUNEXT" =~ [nN] ]]; then
    echo "Saya di KSU"
    patch -lfp1 -d ./ngk < ./patch/KERNEL_KSU.patch
    sed -i 's/CONFIG_KSU=[Nn]/CONFIG_KSU=y/g' ngk/arch/arm64/configs/nogravity_defconfig
    sed -i 's/CONFIG_KPROBES=[Nn]/CONFIG_KPROBES=y/g' ngk/arch/arm64/configs/nogravity_defconfig
elif [[ "$KSU" =~ [yY] && "$KSUNEXT" =~ [yY] ]]; then
    echo "Saya di KNext"
    patch -lfp1 -d ./ngk < ./patch/KERNEL_NOKSU.patch
    echo "Saya sedang patching KNext"
    patch -lfp1 -d ./ngk < ./patch/KERNEL_NOKSU_KNEXT.patch
    # removing KSU symlink
    rm -f ./ngk/drivers/kernelsu && sed -i '13a\ln -s /data/KernelSU-Next/kernel /data/drivers/kernelsu' ngk/compile.sh

    if [[ "$CONFIG_LOCALVERSION" == "-NoGravity"* ]]; then
        sed -i '163c\res="${res}${CONFIG_LOCALVERSION}${LOCALVERSION}-KNext"' ngk/scripts/setlocalversion
    fi
else
    echo "saya di Non Root"
    patch -lfp1 -d ./ngk < ./patch/KERNEL_NOKSU.patch
fi

if [[ "$CONFIG_LOCALVERSION" == "-NoGravity"* ]]; then
    sed -i '168c\    res="$res"' ngk/scripts/setlocalversion
fi

# Setting Information in Kernel
sed -i "24 c\export KBUILD_BUILD_USER=$BUILD_USER" ngk/compile-beryllium.sh
sed -i "25 c\export KBUILD_BUILD_HOST=$BUILD_HOST" ngk/compile-beryllium.sh
sed -i "45c\CONFIG_LOCALVERSION=\"$CONFIG_LOCALVERSION\"" ngk/arch/arm64/configs/nogravity_defconfig
sed -i "7c\kernel.string=${CONFIG_LOCALVERSION:1}" ak3/anykernel.sh


# change script kernel label
if [[ "$KSUNEXT" =~ [yY] && "$SUSFS" =~ [yY] ]]; then
    # set susfs patching function
    sed -i '14a\sh /tmp/ext/susfs.sh' ngk/compile.sh
fi

# Setting vbmeta.digest
#sed -i "572 c\CONFIG_CMDLINE=\"androidboot.vbmeta.digest=$VBMETA_DIGEST\"" ngk/arch/arm64/configs/nogravity_defconfig


docker run \
 --name 'ngk_build' \
 --rm \
 -v "./ngk:/data" \
 -v "./ak3:/tmp/ak3" \
 -v "./out:/tmp/out" \
 -v "./ext:/tmp/ext" \
 -v "./bin/compile_kernel:/bin/compile_kernel" \
 -v "./bin/zip_package:/bin/zip_package" \
 -i ubuntu:build-20 sh -c "compile_kernel"
